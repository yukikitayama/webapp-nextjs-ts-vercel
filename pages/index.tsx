import Head from "next/head";
import { useCallback } from "react";
import Particles from "react-particles";
import type { Engine, Container } from "tsparticles-engine";
import { loadFull } from "tsparticles";
import Grid from "@mui/material/Grid";
import Typography from "@mui/material/Typography";
import { teal } from "@mui/material/colors";

import { Article } from "../types/types";
import { tsParticlesOptions } from "../utils/style";
import Greeting from "../components/home/greeting";
import CategoryPlot from "../components/expense/category-plot";
import ArticleCard from "../components/article/article-card";
import FitnessPlot from "../components/fitness/fitness-plot";
import Architecture from "../components/home/architecture";

const Home: React.FC<Article> = (props) => {
  // tsParticles
  const particlesInit = useCallback(async (engine: Engine) => {
    await loadFull(engine);
  }, []);
  const particlesLoaded = useCallback(
    async (container: Container | undefined) => {
      // await console.log(container);
    },
    []
  );

  return (
    <>
      <Head>
        <title>Yuki&apos;s App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Particles
        id="tsparticles"
        init={particlesInit}
        loaded={particlesLoaded}
        options={tsParticlesOptions}
      />

      <Grid container spacing={5} justifyContent="center" alignItems="center">
        <Grid item>
          <Greeting />
        </Grid>

        <Grid item xs={12} mx={{ xs: 5, lg: 20 }}>
          <Typography variant="body1" gutterBottom>
            Hi, I&apos;m Yuki. I&apos;m using this to manage expense, make
            articles, and check fitness. You might find something useful in
            articles. The example applications are the following. Find more from
            menu.
          </Typography>
        </Grid>

        <Grid item xs={12} sm={6} lg={4}>
          <CategoryPlot />
        </Grid>

        <Grid item xs={12} sm={6} lg={4}>
          <ArticleCard article={props.article} />
        </Grid>

        <Grid item xs={12} sm={6} lg={4}>
          <FitnessPlot
            data={{ id: "sleep", title: "Sleep", yAxisLabel: "Minutes" }}
          />
        </Grid>

        <Grid item xs={12} mt={10} mx={{ xs: 5, lg: 20 }}>
          <Typography variant="body1" gutterBottom>
            The frontend is made by Next.js in TypeScript, and the backend is
            AWS services with Python, running in a serverless microservices
            manner like below.
          </Typography>
        </Grid>

        <Grid item xs={12}>
          <Architecture />
        </Grid>

        <Grid item xs={12} mx={{ xs: 5, lg: 20 }}>
          <Typography variant="body1" gutterBottom>
            The application code is in the following GitHub. I hope you enjoy
            this app!
          </Typography>
          <Typography
            variant="body1"
            gutterBottom
            sx={{ color: teal[200], textDecoration: "underline" }}
          >
            <a
              href="https://github.com/yukikitayama/webapp-nextjs-ts-vercel"
              target="_blank"
              rel="noreferrer"
            >
              https://github.com/yukikitayama/webapp-nextjs-ts-vercel
            </a>
          </Typography>
          <Typography
            variant="body1"
            gutterBottom
            sx={{ color: teal[200], textDecoration: "underline" }}
          >
            <a
              href="https://github.com/yukikitayama/api"
              target="_blank"
              rel="noreferrer"
            >
              https://github.com/yukikitayama/api
            </a>
          </Typography>
        </Grid>
      </Grid>
    </>
  );
};

export async function getStaticProps() {
  const response = await fetch(
    `${process.env.NEXT_PUBLIC_API_GATEWAY_URL}/articles?id=639ab1522ec4249ad4cecab7`
  );
  const article = await response.json();

  return {
    props: {
      article: article,
    },
  };
}

export default Home;
